#!/usr/bin/perl
# radioc - client for radiod
use strict;
use Radiod::URI qw(geturi listchans);
use Data::Dumper;
$Data::Dumper::Sortkeys = 1;
$Data::Dumper::Indent   = 1;
$Data::Dumper::Maxdepth = 0; #unlimited

my $choice = shift;
my $load_choice = shift or 'dingata';
chomp($choice);
chomp($load_choice);
my $fifo = "$ENV{HOME}/.mplayer/fifo";
our %channels;

my %commands = (
  quit    => 'quit',
  stop    => 'stop',
  pause   => 'pause',
  son     => 'mute 0',
  soff    => 'mute 1',
#  codec   => 'get_audio_codec',
#  bitrate => 'get_audio_bitrate',
#  samples => 'get_audio_samples',
#  title   => 'get_meta_title',
#  artist  => 'get_meta_artist',
#  album   => 'get_meta_album',
#  year    => 'get_meta_year',
#  comment => 'get_meta_comment',
#  track   => 'get_meta_track',
#  genre   => 'get_meta_genre',
  change  => 'loadfile',
);
#print Dumper \%commands;
usage() if !$choice;


if($choice ~~ %commands) {
  my $station;
  if($choice eq 'change') {
    if(!$load_choice) {
      print STDERR "Provide a channel!\n";
      exit 1;
    }
    print 'Playing ', geturi($load_choice), "\n" unless !$load_choice;
    $station = geturi($load_choice);
    dowhattold("load $station");
    exit 0;
  }
  print "Choice found!\n";
  dowhattold($choice);
}

sub dowhattold {
  my $action = shift;
  chomp($action);
  my $fh;
  open($fh, '>', $fifo) or die "Cant open $fh for writing: $!";
  print $fh "$action\n";
}

sub usage {
  print << "USAGE";
Usage: $0 command (arg)
  COMMANDS
USAGE
  for my $action(sort(keys(%commands))) {
    printf("%9s\n", $action);
  }
  print << "LISTCHANGE";

The current stream can easily be changed using the 'change' command and
a corresponding key to the channel you want to listen to.

  EXAMPLES
    $0 change psy
    $0 change p3
    $0 change hc
 
LISTCHANGE
  printf("%15s %28s\n", 'CHANNEL', 'KEY');
  listchans();
  
  exit 0;
}
