#!/usr/bin/perl
=rpc
  Radio Playing Client

  Program for controlling Radio Playing Daemon (RPD)

=cut

use strict;
use RPD::URI qw(geturi listchans getchname);
use Mplayer::Stream::NowPlaying qw(nowplaying);
use Data::Dumper;

my $options; 
my $action = shift;
my $arg    = shift;
my $pipe_w = "$ENV{HOME}/.mplayer/rpd.fifo";
my $log    = "$ENV{HOME}/.mplayer/rpd.log";

if(!-e $log) {
  open(my $fh,'>',$log) or die "Cant create $log: $!";
}


$options = {
  quit    => sub {fifo_w($action);},
  stop    => sub {fifo_w('pause');}, # stop kills the player
  pause   => sub {fifo_w($action);},
  son     => sub {fifo_w($action);},
  soff    => sub {fifo_w($action);},
  np      => sub {print nowplaying($log, 'current'), "\n";},
  help    => sub {printf("%-15s\n",$_) for sort(keys %{$options});},
  list    => sub {listchans();},
  'help++'=> sub {usage();},
  npa     => sub {
    my $info = nowplaying($log,'all');
    for my $oldnp(@{$info}) {
      print "$oldnp\n";
    }
  },
  change  => sub {
    fifo_w('loadfile', geturi($arg));
    print "Playing ", getchname($arg), "\n   From: ", geturi($arg), "\n";
    sleep 2;
    print "       "; $options->{np}->();
  },
};


$options->{'help++'}->() unless $action;
defined $options->{$action} && $options->{$action}->();

sub fifo_w {
  my $action = shift;
  my $arg    = shift;
  open(my $fh, '>', $pipe_w) or die "Can not open $pipe_w for writing: $!";
  print {$fh} "$action $arg\n";
}





sub usage {
  print << "USAGE";
  Usage: rpc [OPTIONS] (ARGS) 

  OPTIONS:
      np      show the currently playing song
      npa     show all played songs since RPD started
      change  change channel
      list    list all available channels
      son     turn on sound
      soff    turn off sound
      pause   pause playback
      stop    pauses playback. If you really want to stop, use quit
      quit    stops playback (and RPD)

  EXAMPLES:
      rpc change psy   # change channel to the one associated with
                            the 'psy' key (di.fm)

USAGE
}
